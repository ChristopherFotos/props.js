{"version":3,"sources":["webpack://props/./grid/Cell.js","webpack://props/./grid/Column.js","webpack://props/./grid/Grid.js","webpack://props/./Vector.js","webpack://props/./utilities.js","webpack://props/./collisionFunction.js","webpack://props/./Prop.js","webpack://props/./Scene.js","webpack://props/./functions.js","webpack://props/./lib.js","webpack://props/webpack/bootstrap","webpack://props/webpack/startup","webpack://props/webpack/runtime/define property getters","webpack://props/webpack/runtime/hasOwnProperty shorthand","webpack://props/webpack/runtime/make namespace object"],"names":["Cell","x","y","size","scene","this","props","prop","push","pop","context","beginPath","rect","strokeStyle","stroke","Column","width","range","cells","makeColumn","i","height","addCell","Grid","cellSize","columns","grid","createGrid","show","addColumn","forEach","column","utils","rangeIntersect","position","_x","propCells","cell","_y","findColumns","cellArray","findCells","c","concat","rectProps","insertProp","col","length","draw","window","Vector","value","angle","getLength","Math","cos","sin","atan2","getAngle","sqrt","v2","vector","create","getX","getY","val","norm","min","max","lerp","map","sourceMin","sourceMax","destMin","destMax","clamp","distance","p0","p1","dx","dy","distanceXY","x0","y0","x1","y1","circleCollision","c0","c1","radius","circlePointCollision","circle","pointInRect","inRange","min0","max0","min1","max1","rectIntersect","r0","r1","collisionAxisDetector","degreesToRads","degrees","PI","radsToDegrees","radians","randomRange","random","randomInt","floor","randomDist","iterations","total","compareSigns","a","b","angleTo","p2","collisionFunction","collisionCandidates","coColliders","collisionFunctions","cfunc","bind","bcfunc","solid","player_bottom","tiles_bottom","player_right","tiles_right","b_collision","t_collision","l_collision","r_collision","platform","velocity","abs","_f","mass","elasticity","colliding","bool","coCollider","Prop","shape","fill","image","strokeColor","fillColor","stackable","fixed","speed","direction","antiTunneling","accelMag","customProperties","customFunctions","friction","minSpeed","collision","nograv","movement","movementArray","controls","bitmap","setLength","setAngle","acceleration","checkedCollisionPairs","render","initToRenderArray","setInterval","collide","interval","unshift","candidates","includes","addTo","multiplyBy","gravity","boundCollision","fillStyle","closePath","drawImage","accel","edgeBounce","fixedX","console","log","fixedY","func","bfunc","populateCollisionCandidates","undefined","Scene","canvasId","updateArray","black","canvas","document","querySelector","controllers","getContext","options","clearRect","f","runController","clearGrid","insertPropArray","showGrid","body","update","startScene","the_scene","u","requestAnimationFrame","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prototype","hasOwnProperty","call","r","Symbol","toStringTag"],"mappings":"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","file":"props.js","sourcesContent":["export default class Cell {\r\n  constructor(x, y, size, scene) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.size = size;\r\n    this.scene = scene;\r\n    this.props = [];\r\n  }\r\n\r\n  addProp(prop) {\r\n    //add a prop to the cell\r\n    this.props.push(prop);\r\n  }\r\n\r\n  removeProp(prop) {\r\n    this.props.pop(prop);\r\n  }\r\n\r\n  draw() {\r\n    this.scene.context.beginPath();\r\n    this.scene.context.rect(this.x, this.y, this.size, this.size);\r\n    this.scene.context.strokeStyle = 'black';\r\n    this.scene.context.stroke()\r\n  }\r\n}\r\n","import Cell from './Cell'\r\n\r\nexport default class Column {\r\n  constructor(x, y, width, scene) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.scene = scene;\r\n    this.width = width;\r\n    this.range = [this.x, this.x + this.width];\r\n    this.cells = [];\r\n    this.makeColumn();\r\n  }\r\n\r\n  addCell(x, y, size, scene) {\r\n    this.cells.push(new Cell(x, y, size, scene));\r\n  }\r\n\r\n  makeColumn() {\r\n    for (let i = 0; i < this.scene.height + (this.width + 1); i += this.width) {\r\n      this.addCell(this.x, i, this.width, this.scene);\r\n    }\r\n  }\r\n}\r\n","import Column from \"./Column\";\r\nimport Cell from './Cell'\r\n\r\nexport default class Grid {\r\n  constructor(scene, width, height, cellSize) {\r\n    this.scene      = scene;\r\n    this.width      = width;\r\n    this.height     = height;\r\n    this.cellSize   = cellSize;\r\n    this.columns    = [];\r\n    this.scene.grid = this;\r\n    this.createGrid();\r\n    this.show = false;\r\n  }\r\n\r\n  addColumn(x, y, width, scene) {\r\n    this.columns.push(new Column(x, y, width, scene));\r\n  }\r\n\r\n  createGrid() {\r\n    for (\r\n      let i = 0;\r\n      i < this.scene.width + (this.cellSize + 1);\r\n      i += this.cellSize\r\n    ) {\r\n      this.addColumn(i, 0, this.cellSize, this.scene);\r\n    }\r\n  }\r\n\r\n  findColumns(prop){\r\n    const columns = [];\r\n    this.columns.forEach(column => {\r\n      if (\r\n        utils.rangeIntersect(\r\n          column.x,\r\n          column.x + column.width,\r\n          prop.position._x,\r\n          prop.position._x + prop.width\r\n        )\r\n      ) {\r\n        columns.push(column)\r\n      }\r\n    })\r\n    return columns\r\n  }\r\n\r\n  findCells(prop, column){\r\n    let propCells = []\r\n    column.cells.forEach(cell => {\r\n      if (\r\n        utils.rangeIntersect(\r\n          cell.y,\r\n          cell.y + cell.size,\r\n          prop.position._y,\r\n          prop.position._y + prop.height\r\n        )\r\n      ) {\r\n        propCells.push(cell);\r\n      } \r\n    })\r\n    return propCells;\r\n  }\r\n\r\n  insertProp(prop) {\r\n\r\n    prop.cells = []\r\n    let columns = this.findColumns(prop)\r\n \r\n    columns.forEach(column => {\r\n      let cellArray = this.findCells(prop, column)\r\n      cellArray.forEach(c => {\r\n        c.props.push(prop)\r\n\r\n        prop.cells = prop.cells.concat(cellArray)\r\n\r\n      })\r\n    });\r\n    \r\n  }\r\n\r\n  insertPropArray(){\r\n    this.scene.rectProps.forEach(prop => {\r\n      this.insertProp(prop)\r\n    })\r\n  }\r\n\r\n  clearGrid(){\r\n    this.columns.forEach(col => {\r\n      col.cells.forEach(cell => {\r\n        cell.props.length = 0;\r\n      })\r\n    })\r\n  }\r\n\r\n  showGrid(){\r\n      this.columns.forEach(col => {\r\n        col.cells.forEach(cell =>{\r\n        cell.draw() \r\n       })\r\n     })\r\n  }\r\n}\r\n\r\nwindow.Grid = Grid\r\n","export default class Vector {\r\n  constructor(x, y) {\r\n    this._x = x;\r\n    this._y = y;\r\n  }\r\n\r\n  getX() {\r\n    return this._x;\r\n  }\r\n\r\n  setX(value) {\r\n    this._x = value;\r\n  }\r\n\r\n  getY() {\r\n    return this._y;\r\n  }\r\n\r\n  setY(value) {\r\n    this._y = value;\r\n  }\r\n\r\n  setAngle(angle) {\r\n    var length = this.getLength();\r\n    this._x = Math.cos(angle) * length;\r\n    this._y = Math.sin(angle) * length;\r\n  }\r\n\r\n  getAngle() {\r\n    return Math.atan2(this._y, this._x);\r\n  }\r\n\r\n  setLength(length) {\r\n    var angle = this.getAngle();\r\n    this._x = Math.cos(angle) * length;\r\n    this._y = Math.sin(angle) * length;\r\n  }\r\n\r\n  getLength() {\r\n    return Math.sqrt(this._x * this._x + this._y * this._y);\r\n  }\r\n\r\n  add(v2) {\r\n    return vector.create(this._x + v2.getX(), this._y + v2.getY());\r\n  }\r\n\r\n  subtract(v2) {\r\n    return new Vector(this._x - v2.getX(), this._y - v2.getY());\r\n  }\r\n\r\n  multiply(val) {\r\n    return vector.create(this._x * val, this._y * val);\r\n  }\r\n\r\n  divide(val) {\r\n    return vector.create(this._x / val, this._y / val);\r\n  }\r\n\r\n  addTo(v2) {\r\n    this._x += v2._x;\r\n    this._y += v2._y;\r\n  }\r\n\r\n  multiplyBy(value) {\r\n    this._x *= value;\r\n    this._y *= value;\r\n  }\r\n}\r\n\r\nwindow.Vector = Vector","\r\n\r\nconst utils = {\r\n  norm: function(value, min, max) {\r\n    return (value - min) / (max - min);\r\n  },\r\n\r\n  lerp: function(norm, min, max) {\r\n    return (max - min) * norm + min;\r\n  },\r\n\r\n  map: function(value, sourceMin, sourceMax, destMin, destMax) {\r\n    return utils.lerp(\r\n      utils.norm(value, sourceMin, sourceMax),\r\n      destMin,\r\n      destMax\r\n    );\r\n  },\r\n\r\n  clamp: function(value, min, max) {\r\n    return Math.min(Math.max(value, Math.min(min, max)), Math.max(min, max));\r\n  },\r\n\r\n  distance: function(p0, p1) {\r\n    var dx = p1.x - p0.x,\r\n      dy = p1.y - p0.y;\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n  },\r\n\r\n  distanceXY: function(x0, y0, x1, y1) {\r\n    var dx = x1 - x0,\r\n      dy = y1 - y0;\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n  },\r\n\r\n  circleCollision: function(c0, c1) {\r\n    return utils.distance(c0, c1) <= c0.radius + c1.radius;\r\n  },\r\n\r\n  circlePointCollision: function(x, y, circle) {\r\n    return utils.distanceXY(x, y, circle.x, circle.y) < circle.radius;\r\n  },\r\n\r\n  pointInRect: function(x, y, rect) {\r\n    return (\r\n      utils.inRange(x, rect.x, rect.x + rect.width) &&\r\n      utils.inRange(y, rect.y, rect.y + rect.height)\r\n    );\r\n  },\r\n\r\n  inRange: function(value, min, max) {\r\n    return value >= Math.min(min, max) && value <= Math.max(min, max);\r\n  },\r\n\r\n  rangeIntersect: function(min0, max0, min1, max1) {\r\n    return (\r\n      Math.max(min0, max0) >= Math.min(min1, max1) &&\r\n      Math.min(min0, max0) <= Math.max(min1, max1)\r\n    );\r\n  },\r\n\r\n  rectIntersect: function(r0, r1) {\r\n    return (\r\n      utils.rangeIntersect(\r\n        r0.position._x,\r\n        r0.position._x + r0.width,\r\n        r1.position._x,\r\n        r1.position._x + r1.width\r\n      ) &&\r\n      utils.rangeIntersect(\r\n        r0.position._y,\r\n        r0.position._y + r0.height,\r\n        r1.position._y,\r\n        r1.position._y + r1.height\r\n      )\r\n    );\r\n  },\r\n\r\n  collisionAxisDetector: function(r0, r1) {},\r\n\r\n  degreesToRads: function(degrees) {\r\n    return (degrees / 180) * Math.PI;\r\n  },\r\n\r\n  radsToDegrees: function(radians) {\r\n    return (radians * 180) / Math.PI;\r\n  },\r\n\r\n  randomRange: function(min, max) {\r\n    return min + Math.random() * (max - min);\r\n  },\r\n\r\n  randomInt: function(min, max) {\r\n    return Math.floor(min + Math.random() * (max - min + 1));\r\n  },\r\n\r\n  randomDist: function(min, max, iterations) {\r\n    var total = 0;\r\n\r\n    for (var i = 0; i < iterations; i += 1) {\r\n      total += utils.randomRange(min, max);\r\n    }\r\n    return total / iterations;\r\n  },\r\n\r\n  compareSigns: function(a, b) {\r\n    if ((a > 0 && b > 0) || (a < 0 && b < 0)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  },\r\n\r\n  angleTo: function(p1, p2){\r\n    Math.atan2(p2.y - p1.y, p2.x - p1.x)\r\n  }\r\n};\r\n\r\n\r\nexport default utils\r\nwindow.utils = utils","import utils from './utilities'\r\n\r\nexport default function collisionFunction() {\r\n  for (let i = 0; i < this.collisionCandidates.length; i++) {\r\n\r\n    let coColliders = []\r\n\r\n      if (utils.rectIntersect(this.collisionCandidates[i], this) && this.collisionCandidates[i] != this) {\r\n\r\n        coColliders.push(this.collisionCandidates[i])\r\n        \r\n        // the co-colliders should be passed as an array to account for frames where more than one collision is happening. \r\n        // As far as terrain goes: its position can be fixed in customFunctions. We'll need a way for props to override the collision \r\n        // behaviour in this function. Terrain will override this behaviour and, when it deects a collision, it will set this.collisionCandidates[i]'s \r\n        // x or y velocity to 0, depending on whether the terrain is vertical or horizontal. \r\n\r\n        /*\r\n          for collision response: let's try moving the blocks out of collision by simply adding or subtracting their penetration depth \r\n          from their position vector, then applying f = ma. moving them out of collision before applying f=ma should prevent the jelly-like\r\n          collisions we were seeing when we used f=ma on its own. Using acceleration as opposed to penetration depth should (hopefully) prevent\r\n          over-response to collisions\r\n        */\r\n\r\n        /* \r\n         How can this collision algorithm be made extensible? Think about how many times you've changed the collision behaviour so far. \r\n         How can we make it so that designers have that level of control, but don't ever have to mess with this long, unweildy function? \r\n        */\r\n\r\n        if(this.collisionFunctions){\r\n          this.collisionFunctions.forEach(cfunc => {\r\n          let bcfunc = cfunc.bind(this);\r\n          bcfunc(coColliders);\r\n        })\r\n      }\r\n\r\n      // if(this.stackable){\r\n      //   if(this.collisionCandidates[i].platform){\r\n      //     this.platform = true;\r\n      //   } else this.platform = false\r\n      // }\r\n        \r\n        if (this.solid) {\r\n          let player_bottom = this.position._y + this.height;\r\n          let tiles_bottom =\r\n            this.collisionCandidates[i].position._y + this.collisionCandidates[i].height;\r\n          let player_right = this.position._x + this.width;\r\n          let tiles_right =\r\n            this.collisionCandidates[i].position._x + this.collisionCandidates[i].width;\r\n\r\n          let b_collision = tiles_bottom - this.position._y;\r\n          let t_collision = player_bottom - this.collisionCandidates[i].position._y;\r\n          let l_collision = player_right - this.collisionCandidates[i].position._x;\r\n          let r_collision = tiles_right - this.position._x;\r\n\r\n          if ( // top collision\r\n            t_collision < b_collision &&\r\n            t_collision < l_collision &&\r\n            t_collision < r_collision\r\n          ) {\r\n            \r\n            if(this.collisionCandidates[i].platform){\r\n\r\n              // this line will have to be added to left and right collisions to prevent tunneling \r\n              this.position._y = this.collisionCandidates[i].position._y - this.height\r\n              this.velocity._y = this.velocity._y * -1\r\n              this.velocity._y *= 0.8\r\n\r\n              if(Math.abs(this.velocity._y) < 6){ // the 6 shouldn't be hard coded. perhaps it should be derrived from elasticity?\r\n                this.velocity._y = 0\r\n                this.position._y = this.collisionCandidates[i].position._y - this.height\r\n                this.platform = true  \r\n              }\r\n\r\n              let _f = this.mass * (this.velocity._y * -1);\r\n              this.collisionCandidates[i].velocity._y +=\r\n              (_f / this.collisionCandidates[i].mass) * (this.elasticity * this.collisionCandidates[i].elasticity);    \r\n            } \r\n            \r\n            else {       \r\n              this.platform = false      \r\n              let _f = this.mass * this.velocity.getLength();\r\n              this.collisionCandidates[i].velocity._y +=\r\n              (_f / this.collisionCandidates[i].mass) *\r\n              (this.elasticity * this.collisionCandidates[i].elasticity); }                        \r\n            }\r\n\r\n          if ( // bottom collision\r\n            b_collision < t_collision &&\r\n            b_collision < l_collision &&\r\n            b_collision < r_collision\r\n          ) {\r\n\r\n            // this.collisionCandidates[i].position._y = this.position._y - this.collisionCandidates[i].height\r\n\r\n            let _f = this.mass * this.velocity.getLength();\r\n            this.collisionCandidates[i].velocity._y -=\r\n              (_f / this.collisionCandidates[i].mass) *\r\n              (this.elasticity * this.collisionCandidates[i].elasticity);\r\n   \r\n          }\r\n          if ( // left collision\r\n            l_collision < r_collision &&\r\n            l_collision < t_collision &&\r\n            l_collision < b_collision\r\n          ) {          \r\n            // this.collisionCandidates[i].position._x = this.position._x + this.width \r\n\r\n            let _f = this.mass * this.velocity.getLength();\r\n            this.collisionCandidates[i].velocity._x +=\r\n              (_f / this.collisionCandidates[i].mass) *\r\n              (this.elasticity * this.collisionCandidates[i].elasticity);\r\n\r\n                      \r\n          }\r\n\r\n          if ( // right collision\r\n            r_collision < l_collision &&\r\n            r_collision < t_collision &&\r\n            r_collision < b_collision\r\n          ) {\r\n            \r\n            // this.collisionCandidates[i].position._x = this.position._x - this.collisionCandidates[i].width \r\n\r\n            let _f = this.mass * this.velocity.getLength();\r\n            this.collisionCandidates[i].velocity._x -=\r\n              (_f / this.collisionCandidates[i].mass) *\r\n              (this.elasticity * this.collisionCandidates[i].elasticity);\r\n\r\n            \r\n            \r\n          }\r\n        }\r\n\r\n        this.colliding = {\r\n          bool: true,\r\n          coCollider: this.collisionCandidates[i]\r\n        }\r\n    } else {\r\n      this.colliding = {\r\n      bool: false,\r\n      coCollider: {}\r\n      };\r\n    }\r\n  }\r\n}\r\n","import collisionFunction from './collisionFunction'\r\nimport Vector from './Vector'\r\n\r\nexport default class Prop {\r\n  constructor(\r\n    scene,\r\n    {\r\n      shape,\r\n      radius,\r\n      width,\r\n      stroke,\r\n      fill,\r\n      image,\r\n      strokeColor,\r\n      platform = false,\r\n      fillColor,\r\n      height,\r\n      x,\r\n      y,\r\n      stackable = true,\r\n      fixed,\r\n      speed,\r\n      direction,\r\n      mass,\r\n      solid,\r\n      antiTunneling,\r\n      accelMag,\r\n      customProperties,\r\n      customFunctions,\r\n      collisionFunctions,\r\n      friction,\r\n      elasticity,\r\n      minSpeed,\r\n      collision,\r\n      nograv,\r\n      movement,\r\n      movementArray,\r\n      controls = [],\r\n      bitmap\r\n    } = {}\r\n  ) {\r\n    this.scene = scene;\r\n    this.shape = shape;\r\n    this.image = image;\r\n    this.radius = radius;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.stroke = stroke;\r\n    this.fill = fill;\r\n    this.fillColor = fillColor;\r\n    this.strokeColor = strokeColor;\r\n    this.collision = collision;\r\n    this.coCollider = {};\r\n    this.platform = platform;\r\n    this.bitmap = bitmap;\r\n    this.position = new Vector(x, y);\r\n    this.direction = direction;\r\n    this.velocity = new Vector(0, 0);\r\n    this.velocity.setLength(speed);\r\n    this.velocity.setAngle(this.direction);\r\n    this.stackable = stackable;\r\n    this.mass = mass;\r\n    this.solid = solid;\r\n    this.acceleration = new Vector(0, 0);\r\n    this.acceleration.setLength(accelMag);\r\n    this.acceleration.setAngle(this.direction);\r\n    this.movement = movement;\r\n    this.movementArray = movementArray;\r\n    this.friction = friction;\r\n    this.elasticity = elasticity;\r\n    this.minSpeed = minSpeed;\r\n    this.controls = controls;\r\n    this.nograv = nograv;\r\n    this.fixed = fixed;\r\n    this.antiTunneling = antiTunneling;\r\n    this.customProperties = customProperties;\r\n    this.customFunctions = customFunctions;\r\n    this.collisionFunctions = collisionFunctions;\r\n    this.colliding = false;\r\n    this.collisionCandidates = [];\r\n    this.checkedCollisionPairs = [];\r\n    this.cells = [];\r\n    this.render = true;\r\n    this.initToRenderArray();\r\n    // this.initAntiTunneling();\r\n     if(this.antiTunneling){\r\n        setInterval(() => {\r\n        this.collide()\r\n        if(this.velocity.getLength() < this.antiTunneling.floor){\r\n          this.velocity.setLength(0)\r\n        }\r\n      }, this.antiTunneling.interval);\r\n    }\r\n    \r\n\r\n  }\r\n\r\n  initAntiTunneling(){\r\n    \r\n\r\n  }\r\n\r\n  // resizeAround(corner){\r\n\r\n  // }\r\n\r\n  initToRenderArray() {\r\n    this.scene.rectProps.unshift(this);\r\n  }\r\n\r\n  initToCollisionArray() {\r\n    if ((this.shape = \"rectangle\")) {\r\n      this.scene.rectProps.unshift;\r\n    }\r\n  }\r\n\r\n  populateCollisionCandidates() {\r\n    let candidates = [];\r\n    this.cells.forEach(cell => {\r\n      cell.props.forEach(prop => {\r\n        if ((prop != this) && (!candidates.includes(prop))) {\r\n          candidates.push(prop)\r\n        }\r\n      })\r\n    });\r\n    this.collisionCandidates = candidates\r\n  }\r\n\r\n  accel() {\r\n    if (!this.fixed) {\r\n      this.velocity.addTo(this.acceleration);\r\n      this.position.addTo(this.velocity);\r\n      this.velocity.multiplyBy(this.friction);\r\n      this.acceleration.multiplyBy(this.friction);\r\n\r\n      if (this.scene.gravity && !this.nograv) {\r\n        if (this.position._y + this.height < this.scene.height - 0.0001) {\r\n          this.velocity._y += this.mass;\r\n        }\r\n      }\r\n\r\n      if ((this.movement = \"default\")) {\r\n        let a = this.velocity.getAngle();\r\n        this.acceleration.setAngle(a);\r\n      }\r\n    } else if (this.fixed) {\r\n      this.velocity.setLength(1);\r\n      this.acceleration.setLength(0);\r\n    }\r\n  }\r\n\r\n  edgeBounce() {\r\n    if (\r\n      this.position._x < 0 ||\r\n      this.position._x + this.width > this.scene.width\r\n    ) {\r\n      this.acceleration.multiplyBy(-1);\r\n      this.velocity._x *= this.elasticity;\r\n    }\r\n\r\n    if (\r\n      this.position._y < 0 ||\r\n      this.position._y + this.height > this.scene.height\r\n    ) {\r\n      this.acceleration.multiplyBy(-1);\r\n      this.velocity._y *= this.elasticity;\r\n    }\r\n  }\r\n\r\n  collide() { // run this method inside of a set interval. but where will that interval go? \r\n    let boundCollision = collisionFunction.bind(this);\r\n    boundCollision();\r\n  }\r\n\r\n  draw() {\r\n    if ((this.shape = \"rectangle\")) {\r\n      this.scene.context.beginPath();\r\n      this.scene.context.rect(\r\n        this.position._x,\r\n        this.position._y,\r\n        this.width,\r\n        this.height\r\n      );\r\n      this.scene.context.strokeStyle = this.strokeColor;\r\n      this.scene.context.fillStyle = this.fillColor;\r\n      if (this.fill) {\r\n        this.scene.context.fill();\r\n      }\r\n      if (this.stroke) {\r\n        this.scene.context.stroke();\r\n      }\r\n      this.scene.context.closePath();\r\n    }\r\n\r\n    if(this.image){\r\n      this.scene.context.drawImage(this.image, this.position._x, this.position._y, this.width, this.height)\r\n    }\r\n    \r\n  }\r\n\r\n  update() {\r\n    if (this.render) {\r\n      this.checkedCollisionPairs = []\r\n\r\n      this.accel();\r\n\r\n      if (this.solid && !this.antiTunneling) {\r\n        this.collide();\r\n      }\r\n\r\n      if (this.collision === \"edgeBounce\") {\r\n        this.edgeBounce();\r\n      }\r\n\r\n      if (this.fixedX) {\r\n        console.log(\"fixedX\");\r\n        this.position._x = this.fixedX;\r\n      }\r\n\r\n      if (this.fixedY) {\r\n        console.log(\"fixedY\");\r\n        this.position._y = fixedY;\r\n      }\r\n\r\n      if (this.customFunctions) {\r\n        this.customFunctions.forEach(func => {\r\n          let bfunc = func.bind(this);\r\n          bfunc();\r\n        });\r\n      }\r\n\r\n      this.populateCollisionCandidates()\r\n\r\n      this.draw();\r\n    } else {\r\n      this.position = new Vector(undefined, undefined);\r\n    }\r\n  }\r\n}\r\n\r\nwindow.Prop = Prop","import Prop from './Prop'\r\nimport Grid from './grid/Grid';\r\n\r\nexport default class Scene {\r\n  constructor(canvasId, width, height, gravity = false, grid = true, updateArray = []) {\r\n\r\n    console.log('CLASS CONSTRUCTOR CLASS CONSTRUCTOR')\r\n\r\n    this.black = 'blue'\r\n    this.canvas = document.querySelector(canvasId);\r\n    this.canvas.width = width;\r\n    this.canvas.height = height;\r\n    this.width = this.canvas.width;\r\n    this.height = this.canvas.height;\r\n    this.updateArray = updateArray;\r\n    this.controllers = [];\r\n    this.gravity = gravity;\r\n    this.context = this.canvas.getContext(\"2d\");\r\n    this.render = [];\r\n    this.rectProps = [];\r\n    this.grid = null;\r\n  }\r\n\r\n  // add getters and setters\r\n  \r\n  add(scene, options) {\r\n    return new Prop(scene, options);\r\n  }\r\n\r\n  addGrid(cellSize) {\r\n    this.grid = new Grid(this, this.width, this.height, cellSize);\r\n  }\r\n\r\n  update() {\r\n\r\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n    if(this.updateArray){this.updateArray.forEach((f)=>{f.bind(this)()})};\r\n\r\n    this.controllers.forEach(c=> { c.runController() });\r\n\r\n    if (this.grid) {\r\n      this.grid.clearGrid()\r\n      this.grid.insertPropArray()\r\n      if (this.grid.show) {\r\n        this.grid.showGrid()\r\n      }\r\n    };\r\n\r\n    this.rectProps.forEach(body => {body.update();});\r\n  }\r\n}\r\n\r\nwindow.Scene = Scene","export default function startScene(the_scene) {\r\n  function u() {\r\n    the_scene.update();\r\n    requestAnimationFrame(u);\r\n  }\r\n  u();\r\n}\r\n\r\nwindow.startScene = startScene","import Cell from './grid/Cell'\r\nimport Column from './grid/Column'\r\nimport Grid from './grid/Grid'\r\nimport Vector from  './Vector'\r\nimport utils from './utilities'\r\nimport Scene from './Scene'\r\nimport Prop from './Prop'\r\nimport startScene from './functions'\r\n\r\nconsole.log()\r\n\r\nexport {\r\n    Vector,\r\n    utils,\r\n    Cell,\r\n    Column,\r\n    Grid,\r\n    Scene,\r\n    Prop,\r\n    startScene,\r\n}\r\n\r\nwindow.Scene = Scene\r\n\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(667);\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"sourceRoot":""}